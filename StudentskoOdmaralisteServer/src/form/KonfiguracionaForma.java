package form;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author lukas
 */
public class KonfiguracionaForma extends javax.swing.JDialog {

    private String curUrl;
    private String curPassword;
    private String curUser;
    private String port;
    private String dbName;
    private Properties properties;

    private boolean showingPlaceholderNaziv;
    private boolean showingPlaceholderPort;
    private boolean showingPlaceholderKorisnik;
    private boolean showingPlaceholderLozinka;

    /**
     * Creates new form KonfiguracionaForma
     */
    public KonfiguracionaForma(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();
        stilizuj();
        jTextFieldConnectionInfo.setEnabled(false);

        popuniPodaciOKonekciji();
        initPlaceholders();
    }

    private void initPlaceholders() {
        showingPlaceholderKorisnik = true;
        showingPlaceholderNaziv = true;
        showingPlaceholderPort = true;
        showingPlaceholderLozinka = true;

        postaviPlaceholder(jTextFieldNazivBaze, dbName);
        postaviPlaceholder(jPasswordField, curPassword);
        postaviPlaceholder(jTextFieldPort, port);
        postaviPlaceholder(jTextFieldUsername, curUser);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNazivBaze = new javax.swing.JTextField();
        jTextFieldPort = new javax.swing.JTextField();
        jTextFieldUsername = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jButton = new javax.swing.JButton();
        jTextFieldConnectionInfo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Izmena podataka o serverskoj konekciji:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Korisnik:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Naziv baze:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Port:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Loznika:");

        jTextFieldNazivBaze.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldNazivBaze.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNazivBazeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNazivBazeFocusLost(evt);
            }
        });

        jTextFieldPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPortFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPortFocusLost(evt);
            }
        });

        jTextFieldUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldUsernameFocusLost(evt);
            }
        });

        jPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordFieldFocusLost(evt);
            }
        });

        jButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton.setText("Primeni izmene");
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });

        jTextFieldConnectionInfo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldConnectionInfo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNazivBaze)
                            .addComponent(jTextFieldPort)
                            .addComponent(jTextFieldUsername)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldConnectionInfo, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldConnectionInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNazivBaze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNazivBazeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNazivBazeFocusGained
        if (showingPlaceholderNaziv) {
            jTextFieldNazivBaze.setText("");
            jTextFieldNazivBaze.setBackground(Color.white);
            jTextFieldNazivBaze.setForeground(Color.black);

            showingPlaceholderNaziv = false;
        }
    }//GEN-LAST:event_jTextFieldNazivBazeFocusGained

    private void jTextFieldNazivBazeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNazivBazeFocusLost
        if (jTextFieldNazivBaze.getText().isEmpty()) {
            postaviPlaceholder(jTextFieldNazivBaze, dbName);
            showingPlaceholderNaziv = true;
        }
    }//GEN-LAST:event_jTextFieldNazivBazeFocusLost

    private void jTextFieldPortFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPortFocusGained
        if (showingPlaceholderPort) {
            jTextFieldPort.setText("");
            jTextFieldPort.setBackground(Color.WHITE);
            jTextFieldPort.setForeground(Color.BLACK);

            showingPlaceholderPort = false;
        }
    }//GEN-LAST:event_jTextFieldPortFocusGained

    private void jTextFieldPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPortFocusLost
        if (jTextFieldPort.getText().isEmpty()) {
            postaviPlaceholder(jTextFieldPort, port);
            showingPlaceholderPort = true;
        }
    }//GEN-LAST:event_jTextFieldPortFocusLost

    private void jTextFieldUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldUsernameFocusGained
        if (showingPlaceholderKorisnik) {
            jTextFieldUsername.setText("");
            jTextFieldUsername.setBackground(Color.WHITE);
            jTextFieldUsername.setForeground(Color.BLACK);

            showingPlaceholderKorisnik = false;

        }
    }//GEN-LAST:event_jTextFieldUsernameFocusGained

    private void jTextFieldUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldUsernameFocusLost
        if (jTextFieldUsername.getText().isEmpty()) {
            postaviPlaceholder(jTextFieldUsername, curUser);
            showingPlaceholderKorisnik = true;
        }
    }//GEN-LAST:event_jTextFieldUsernameFocusLost

    private void jPasswordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldFocusGained
        if (showingPlaceholderLozinka) {
            jPasswordField.setText("");
            jPasswordField.setBackground(Color.WHITE);
            jPasswordField.setForeground(Color.BLACK);
            showingPlaceholderLozinka = false;
        }
    }//GEN-LAST:event_jPasswordFieldFocusGained

    private void jPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldFocusLost
        if (jPasswordField.getPassword().length == 0) {
            postaviPlaceholder(jPasswordField, curPassword);
            showingPlaceholderLozinka = true;
        }
    }//GEN-LAST:event_jPasswordFieldFocusLost

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        String noviNazivBaze = jTextFieldNazivBaze.getText();
        String noviPort = jTextFieldPort.getText();
        String noviKorisnik = jTextFieldUsername.getText();
        String novaLozinka = String.valueOf(jPasswordField.getPassword());

        String noviUrl = "jdbc:mysql://localhost:" + noviPort + "/" + noviNazivBaze;
        System.out.println(noviUrl);
        System.out.println(noviKorisnik + " " + novaLozinka);
        
        properties.setProperty("database.url", noviUrl);
        properties.setProperty("database.password", novaLozinka);
        properties.setProperty("database.user", noviKorisnik);

        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("config/db.properties"));
            writer.write("# Azurirano: "+ LocalDateTime.now());
            writer.newLine();
            
            for(String key: properties.stringPropertyNames()){
                String value = properties.getProperty(key);
                writer.write(key + "=" + value);
                writer.newLine();
            }
            writer.close();
            
            JOptionPane.showMessageDialog(this, "Podaci uspesno azurirani", "Uspesna operacija", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Podaci nisu azurirani, doslo je do greske.", "Greska", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextFieldConnectionInfo;
    private javax.swing.JTextField jTextFieldNazivBaze;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables

    private void popuniPodaciOKonekciji() {

        FileInputStream input;
        properties = new Properties();

        try {
            input = new FileInputStream("config/db.properties");

            try {
                properties.load(input);
            } catch (IOException ex) {
                Logger.getLogger(KonfiguracionaForma.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(KonfiguracionaForma.class.getName()).log(Level.SEVERE, null, ex);
        }

        curPassword = properties.getProperty("database.password");
        curUser = properties.getProperty("database.user");
        curUrl = properties.getProperty("database.url");

        // primer-> jdbc:mysql://localhost:3306/studentsko_odmaraliste
        String[] urlParts = curUrl.split("/");
        String[] hostPort = urlParts[2].split(":");
        port = hostPort[1]; // 3306
        dbName = urlParts[3]; // studentsko_odmaraliste

        jTextFieldConnectionInfo.setText(curUrl);
    }

    private void postaviPlaceholder(JTextField field, String text) {
        field.setText(text);
        field.setForeground(Color.WHITE);
        field.setBackground(Color.LIGHT_GRAY);
    }

    private void postaviPlaceholder(JPasswordField pwField, String password) {
        pwField.setText(password);
        pwField.setForeground(Color.WHITE);
        pwField.setBackground(Color.LIGHT_GRAY);
    }

    private void stilizuj() {
        setLocationRelativeTo(null);

        getContentPane().setBackground(new Color(173, 216, 230));

        jButton.setBackground(new Color(255, 140, 0));
        jButton.setForeground(Color.WHITE);
        jButton.setFont(jButton.getFont().deriveFont(java.awt.Font.BOLD, 14f));
        jButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 20, 8, 20));

        // Naslov forme
        setTitle("Konfiguracija konekcije");
    }

}
